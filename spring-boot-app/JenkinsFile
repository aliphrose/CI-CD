pipeline {
  agent any
  tools {
    maven 'Maven_3.8.1' // Specify the Maven version installed on the Jenkins node
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/aliphrose/CI-CD.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd CI_CD/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_TOKEN')]) {
          sh '''
              cd CI_CD/spring-boot-app
              mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=http://0.0.0.0:9000
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        IMAGE = "psdo/cicd:${BUILD_NUMBER}"
        CREDENTIALS_VAR = credentials('dcredential')
      }
      steps {
        script {
            sh '''
                cd CI_CD/spring-boot-app
                docker build -t ${IMAGE} .
            '''
            def dockerImage = docker.image("${IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', CREDENTIALS_VAR) {
                dockerImage.push()
            }
          
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "CI-CD"
            GIT_USER_NAME = "aliphrose"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "aliph12344@gmail.com"
                    git config user.name "aliphrose"
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" CI_CD/spring-boot-app-manifests/deployment.yml
                    git add CI_CD/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} main
                '''
            }
        }
    }
  }
}
